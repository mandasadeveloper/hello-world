<!-- /snippets/product-grid-item.liquid -->
{% comment %}

  This snippet is used to showcase each product during the loop,
  'for product in collection.products' in collection.liquid.

  A liquid variable (grid_item_width) is set just before the this
  snippet is included to change the size of the container.
  Once the variable is set on a page, all future instances of this
  snippet will use that width. Overwrite the variable to adjust this.

  Example
    - assign grid_item_width = 'large--one-quarter medium--one-half'

{% endcomment %}

{% comment %}
  Set the default grid_item_width if no variable is set
{% endcomment %}
{% unless grid_item_width %}
  {% assign grid_item_width = 'large--one-half' %}
{% endunless %}

{% comment %}
  Check if the product is on sale and set a variable to be used below.
{% endcomment %}
{% assign on_sale = false %}
{% if product.compare_at_price > product.price %}
  {% assign on_sale = true %}
{% endif %}

{% comment %}
  Check if the product is sold out and set a variable to be used below.
{% endcomment %}
{% assign sold_out = true %}
{% if product.available %}
  {% assign sold_out = false %}
{% endif %}

<div class="grid__item {{ grid_item_width }}">

  {% assign earrings = product.metafields.earrings %}

    <div class="grid__item {{ earrings.columns }} product-snippet">


    {% comment %}
      Link to your product with the 'within: collection' filter for the link to be aware of the collection.
      This allows you to create collection-based navigation on the product page.

      Results of using 'within: collection':
      - Instead of a URL with /products/product-handle
        you would get /collections/collection-handle/products/product-handle

      For more info on navigation within a collection
        - http://docs.shopify.com/support/your-store/collections/how-to-navigate-within-a-collection

    {% endcomment %}

    <p class="h6">
      <a href="{{ product.url | within: collection }}">{{ product.title }}</a>
    </p>

    <div class="products-wrapper {% if sold_out == true %}earring-sold_out {% endif %}">
      <a href="{{ product.url | within: collection }}" class="grid__image">
        {% if sold_out == true %}
        <div class="earring-wrapper" style="background-image: url({{ product.featured_image.src | img_url: 'master' | replace: earrings.featured-img, earrings.bg-img}});">
         
         <img src="{{ product.featured_image.src | img_url: 'master' | replace: earrings.featured-img, earrings.bg-img}}" alt="" class="earring-bg"/>
         <div class="earring-sold-out-div">
         <span class="earring-sold-out-heading"><h1>Sold out!</h1></span>
         </div>
         </div>
          {% else %}
          <div class="earring-wrapper">
          <img src="{{ product.featured_image.src | img_url: 'master' | replace: earrings.featured-img, earrings.bg-img}}" alt="" class="earring-bg" />
          {% for i in (1..earrings.total-earrings) %}
              {% assign name = 'earring-' | append:i %}
              {% assign earring = product.metafields[name] %}
              <div class="earring-img" style="left: {{ earring.x-origin }}; top: {{ earring.y-origin }};">
                <img src="{{ product.featured_image.src | img_url: 'master' | replace: earrings.featured-img, earring.image-name}}" alt="" />
              </div>
          {% endfor %}
          </div>
          {% endif %}
        
        
      </a>
    {% if sold_out == false %}
    <div class="price-cart-strip">
      <span class="product-price">
        {% comment %}
          You can show a leading 'from' or 'up to' by checking 'product.price_varies'
          if your variants have different prices.
        {% endcomment %}
        {% if on_sale %}
          {% if product.price_varies %}
            {% assign sale_price = product.price | money %}
            {{ 'products.product.on_sale_from_html' | t: price: sale_price }}
          {% else %}
            <strong>{{ 'products.product.on_sale' | t }}</strong>
            {{ product.price | money }}
          {% endif %}
        {% else %}
          {% if product.price_varies %}
            {% assign price = product.price | money %}
            {{ 'products.general.from_text_html' | t: price: price }}
          {% else %}
            {{ product.price | money }}
          {% endif %}
        {% endif %}
        {% if sold_out %}
          <br><strong>{{ 'products.product.sold_out' | t }}</strong>
        {% endif %}
        {% if on_sale %}
          <span class="visually-hidden">{{ 'products.general.regular_price' | t }}</span>
          <br><s>{{ product.compare_at_price | money }}</s>
        {% endif %}
      </span>

      {% comment %}
        ID addToCartForm is a selector for the ajax cart plugin
      {% endcomment %}
      <form action="/cart/add" method="post" enctype="multipart/form-data" id="AddToCartForm" >
        <input type="hidden" name="id" value="{{ product.variants.first.id }}" />
        <button type="submit" name="add" id="AddToCart">
          <span id="AddToCartText">{{ 'products.product.add_to_cart' | t }}</span>
        </button>
      </form>
    </div>
    {% endif %}
  </div>

    <ul>
      {% if product.variants.first.inventory_management == "shopify" and product.variants.first.inventory_quantity > 0 and product.variants.first.inventory_quantity < 10 %}
  		  <li>Only <strong>{{ product.variants.first.inventory_quantity }}</strong> left.</li>
  	  {% endif %}
      {% for tag in product.tags %}
        <li>{{ tag }}</li>
      {% endfor %}
    </ul>
  </div>
</div>
